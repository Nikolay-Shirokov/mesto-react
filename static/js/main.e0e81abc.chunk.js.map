{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/Popup.js","components/PopupWithForm.js","components/ImagePopup.js","utils/utils.js","utils/api.js","hooks/useFormAndValidation.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","CurrentUserContext","React","createContext","Card","card","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","user","src","link","alt","name","title","onClick","onCardClick","type","onCardDelete","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","Footer","Popup","closePopupOnEscButtonKeyDown","event","key","setOpenState","useEffect","isOpen","document","addEventListener","removeEventListener","target","currentTarget","classList","contains","children","PopupWithForm","useState","buttonText","setButtonText","ref","formRef","action","onSubmit","preventDefault","buttonWaitingText","result","Promise","then","res","finally","noValidate","isButtonDisabled","ImagePopup","handleError","err","console","error","Api","options","this","_options","url","queryParams","headers","fetch","baseUrl","ok","json","reject","status","_sendQuery","userInfo","method","body","JSON","stringify","cardId","api","authorization","useFormAndValidation","values","setValues","errors","setErrors","isValid","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","handleChange","e","value","validationMessage","closest","checkValidity","EditProfilePopup","useRef","current","onClose","onUpdateUser","onChange","placeholder","required","minLength","maxLength","EditAvatarPopup","inputRef","onUpdateAvatar","AddPlacePopup","onAddCard","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isCardDeleteConfirmPopupOpen","setIsCardDeleteConfirmPopupOpen","selectedCard","setSelectedCard","setCurrentUser","closeAllPopups","getUserInfo","data","catch","setCards","getInitialCards","Provider","setStateLike","newCard","state","c","newUserInfo","patchUserInfo","newCardData","postCard","newLink","patchAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0e81abc.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\" className=\"header__logo\" aria-label=\"Перейти на главную\"></Link>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card(card) {\n\n  //Данные профиля\n  const currentUser = useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = (card.owner._id === currentUser._id);\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(user => user._id === currentUser._id);\n\n  function handleClick() {\n    card.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    card.onCardLike(card, isLiked);\n  }\n\n  function handleDeleteClick() {\n    card.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"place\">\n      <img className=\"place__image\" src={card.link} alt={card.name} title={`Добавил ${card.owner.name}`} onClick={handleClick} />\n      <h2 className=\"place__caption\">{card.name}</h2>\n      {isOwn? <button className=\"place__delete button\" type=\"button\" aria-label=\"Удалить\" title=\"Удалить\" onClick={handleDeleteClick} ></button>: ''}\n      <div className=\"place__like-container\">\n        <button className={`place__like ${isLiked? 'place__like_active': ''} button`} onClick={handleLikeClick} type=\"button\" aria-label=\"Нравится\" title=\"Нравится\"></button>\n        <p className=\"place__like-counter\">{card.likes.length}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import { useContext } from \"react\";\n\nimport Card from \"./Card\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n\n  //Данные профиля\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"root__content\">\n      <section className=\"profile root__profile\">\n        <div className=\"profile__avatar-container\" onClick={props.onEditAvatar}>\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар нашего героя\" />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button className=\"profile__edit button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={props.onEditProfile}></button>\n          <p className=\"profile__position\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-place button\" type=\"button\" aria-label=\"Добавить карточку места\" onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"root__places\">\n        <ul className=\"places\">\n          {props.cards.map(card => (\n            <Card\n              key={card._id}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              {...card}\n            />)\n          )}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer(props) {\n  return (\n    <footer className=\"footer root__footer\">\n      <p className=\"footer__copyright\">&copy; 2021 Николай Широков</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { useEffect } from \"react\";\n\nfunction Popup(props) {\n\n  function closePopupOnEscButtonKeyDown(event) {\n    if (event.key === 'Escape') {\n      props.setOpenState(false);\n    }\n  }\n\n  function handleClosePopup(event) {\n\n    if (!(event.target === event.currentTarget || event.target.classList.contains('popup__close'))) {\n      return;\n    };\n    props.setOpenState(false);\n  }\n\n  useEffect(() => {\n    if (props.isOpen) {\n      document.addEventListener('keydown', closePopupOnEscButtonKeyDown);\n    } else {\n      document.removeEventListener('keydown', closePopupOnEscButtonKeyDown);\n    }\n  }, [props.isOpen])\n\n  return (\n    <div className={`popup ${props.isOpen?\"popup_opened\":\"\"}`} onClick={handleClosePopup}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close button\" type=\"button\" aria-label=\"Закрыть\"></button>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default Popup;\n","import { useState } from \"react\";\nimport Popup from \"./Popup\";\n\nfunction PopupWithForm(props) {\n\n  const [buttonText, setButtonText] = useState(props.buttonText)\n\n  function handleSubmitForm(event) {\n    event.preventDefault();\n    if (!props.onSubmit) {\n      return;\n    }\n    setButtonText(props.buttonWaitingText ? props.buttonWaitingText : props.buttonText);\n    const result = props.onSubmit(event);\n    if (result instanceof Promise) {\n      result.then(res => props.setOpenState(false));\n      result.finally(res => setButtonText(props.buttonText));\n    }\n  }\n\n  return (\n    <Popup {...props}>\n      <form ref={props.formRef} className=\"form\" action=\"post\" name={`form-${props.name}`} onSubmit={handleSubmitForm} noValidate>\n        <h2 className=\"form__title\">{props.title}</h2>\n        {props.children}\n        <button className={`form__submit ${props.isButtonDisabled? 'form__submit_disabled': ''} button`} type=\"submit\">{buttonText}</button>\n    </form>\n    </Popup >\n  );\n}\n\nexport default PopupWithForm;\n","import Popup from \"./Popup\";\n\nfunction ImagePopup(props) {\n  return (\n    <Popup {...props}>\n      <figure className=\"figure\">\n        <img className=\"figure__image\" src={props.card.link} alt={props.card.name} />\n        <figcaption className=\"figure__caption\">{props.card.name}</figcaption>\n      </figure>\n    </Popup>\n  );\n}\n\nexport default ImagePopup;\n","export function handleError(err) {\n  console.error(err);\n}\n","class Api {\n\n  constructor(options) {\n    this._options = options;\n  }\n\n  _sendQuery(url, queryParams = {}) {\n    queryParams.headers = this._options.headers;\n    return fetch(`${this._options.baseUrl}/${url}`, queryParams)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getInitialCards() {\n    return this._sendQuery('cards');\n  }\n\n  getUserInfo() {\n    return this._sendQuery('users/me');\n  }\n\n  patchUserInfo(userInfo) {\n    const queryParams = {\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: userInfo.name,\n        about: userInfo.about\n      })\n    }\n    return this._sendQuery('users/me', queryParams);\n  }\n\n  patchAvatar(link) {\n    const queryParams = {\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: link\n      })\n    }\n    return this._sendQuery('users/me/avatar', queryParams);\n  }\n\n  postCard(card) {\n    const queryParams = {\n      method: 'POST',\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }\n    return this._sendQuery('cards', queryParams);\n  }\n\n  deleteCard(cardId) {\n    const queryParams = {\n      method: 'DELETE',\n    }\n    return this._sendQuery(`cards/${cardId}`, queryParams);\n  }\n\n  setStateLike(cardId, isLiked) {\n    const method = isLiked? 'DELETE': 'PUT';\n    const queryParams = {\n      method: method,\n    }\n    return this._sendQuery(`cards/likes/${cardId}`, queryParams);\n  }\n\n}\n\n// Инициализация АПИ\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-28',\n  headers: {\n    authorization: '720b9ff8-fdb3-4425-b748-9e049f638fb6',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n","import {useState, useCallback} from 'react';\n\nexport function useFormAndValidation() {\n  const [ values, setValues ] = useState({});\n  const [ errors, setErrors ] = useState({});\n  const [ isValid, setIsValid ] = useState(true);\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n    setValues({...values, [name]: value });\n    setErrors({...errors, [name]: e.target.validationMessage});\n    setIsValid(e.target.closest('form').checkValidity());\n  };\n\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\n    setValues(newValues);\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n  }, [setValues, setErrors, setIsValid]);\n\n  return { values, handleChange, errors, isValid, resetForm, setValues, setIsValid };\n}\n","import { useContext, useEffect, useRef } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { useFormAndValidation } from \"../hooks/useFormAndValidation\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup(props) {\n\n  const { values, handleChange, errors, isValid, resetForm } = useFormAndValidation();\n  const formRef = useRef();\n\n  const currentUser = useContext(CurrentUserContext);\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  useEffect(() => {\n    if (currentUser.name) {\n      const newValues = {\n        name: currentUser.name,\n        about: currentUser.about\n      }\n      resetForm(newValues, {}, formRef.current.checkValidity());\n    }\n  }, [currentUser, props.isOpen, resetForm]);\n\n  function handleSubmit() {\n    // Передаём значения управляемых компонентов во внешний обработчик\n    const result = props.onUpdateUser({\n      name: values.name,\n      about: values.about,\n    });\n    return result;\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      title=\"Редактировать профиль\"\n      name=\"edit-profile\"\n      formRef={formRef}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isButtonDisabled={!isValid}\n      buttonText=\"Сохранить\"\n      buttonWaitingText=\"Сохранение...\"\n    >\n      <fieldset className=\"form__fields\">\n        <label className=\"form__field\">\n          <input value={values.name || ''} onChange={handleChange} className={`form__input ${!errors.name ? '' : 'form__input_type_error'}`} type=\"text\" name=\"name\" placeholder=\"Имя героя\" required minLength=\"2\" maxLength=\"40\" />\n          <span className={`form__input-error ${!errors.name ? '' : 'form__input-error_visible'}`}>{errors.name}</span>\n        </label>\n        <label className=\"form__field\">\n          <input value={values.about || ''} onChange={handleChange} className={`form__input ${!errors.about ? '' : 'form__input_type_error'}`} type=\"text\" name=\"about\" placeholder=\"Позиция героя в мире\" required minLength=\"2\" maxLength=\"200\" />\n          <span className={`form__input-error ${!errors.about ? '' : 'form__input-error_visible'}`}>{errors.about}</span>\n        </label>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup(props) {\n\n  const inputRef = useRef();\n\n  function handleSubmit() {\n    const result = props.onUpdateAvatar(inputRef.current.value);\n    inputRef.current.value = '';\n    return result;\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      title=\"Обновить аватар\"\n      name=\"edit-avatar\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      buttonText=\"Сохранить\"\n      buttonWaitingText=\"Сохренение...\"\n    >\n      <fieldset className=\"form__fields\">\n        <label className=\"form__field\">\n          <input ref={inputRef} className=\"form__input\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required />\n          <span className=\"form__input-error\" data-input-name=\"link\"></span>\n        </label>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useEffect } from \"react\";\nimport { useFormAndValidation } from \"../hooks/useFormAndValidation\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n\n  const { values, handleChange, errors, isValid, resetForm } = useFormAndValidation()\n\n  function handleSubmit() {\n    const result = props.onAddCard({\n      name: values.name,\n      link: values.link,\n    });\n    return result;\n  }\n\n  useEffect(() => {\n    if (props.isOpen) {\n      resetForm();\n    };\n  }, [props.isOpen, resetForm])\n\n  return (\n    <PopupWithForm\n      {...props}\n      title=\"Новое место\"\n      name=\"add-place\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isButtonDisabled={!isValid}\n      buttonText=\"Создать\"\n      buttonWaitingText=\"Создание...\"\n    >\n      <fieldset className=\"form__fields\">\n        <label className=\"form__field\">\n          <input value={values.name || ''} onChange={handleChange} className={`form__input ${!errors.name ? '' : 'form__input_type_error'}`} type=\"text\" name=\"name\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n          <span className={`form__input-error ${!errors.name ? '' : 'form__input-error_visible'}`} data-input-name=\"name\">{errors.name}</span>\n        </label>\n        <label className=\"form__field\">\n          <input value={values.link || ''} onChange={handleChange} className={`form__input ${!errors.link ? '' : 'form__input_type_error'}`} type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required />\n          <span className={`form__input-error ${!errors.link ? '' : 'form__input-error_visible'}`} data-input-name=\"link\">{errors.link}</span>\n        </label>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nimport { useState, useEffect } from \"react\";\nimport { handleError } from \"../utils/utils\";\nimport api from \"../utils/api\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n/* import { Route, Routes } from \"react-router-dom\"; */\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isCardDeleteConfirmPopupOpen, setIsCardDeleteConfirmPopupOpen] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n\n    // Загрузка данных профиля с сервера\n    api.getUserInfo()\n      .then(data => {\n        setCurrentUser(data);\n      })\n      .catch(handleError);\n\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n\n    setIsImagePopupOpen(false);\n\n    setIsCardDeleteConfirmPopupOpen(false);\n\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  function handleUpdateUser(newUserInfo) {\n    return api.patchUserInfo(newUserInfo)\n      .then(res => {\n        setCurrentUser(res);\n/*         setIsEditProfilePopupOpen(false); */\n      })\n      .catch(handleError)\n  }\n\n  function handleUpdateAvatar(newLink) {\n    return api.patchAvatar(newLink)\n      .then(res => {\n        setCurrentUser(res);\n/*         setIsEditAvatarPopupOpen(false); */\n      })\n      .catch(handleError)\n  }\n\n  //Карточки\n  const [cards, setCards] = useState([]);\n\n  //Разовые действия при монтированнии/демонтировании компонента\n  useEffect(() => {\n\n    // Загрузка коллекции карточек с сервера\n    api.getInitialCards()\n      .then(data => {\n        setCards(data);\n      })\n      .catch(handleError);\n\n  }, []);\n\n  function handleCardLike(card, isLiked) {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.setStateLike(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(handleError);\n  }\n\n  function handleCardDeleteClick(card) {\n    setSelectedCard(card);\n    setIsCardDeleteConfirmPopupOpen(true);\n  }\n\n  function handleCardDelete() {\n\n    return api.deleteCard(selectedCard._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== selectedCard._id));\n/*         setIsCardDeleteConfirmPopupOpen(false) */\n      })\n      .catch(handleError);\n  }\n\n  function handleAddCard(newCardData) {\n    return api.postCard(newCardData)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n/*         setIsAddPlacePopupOpen(false); */\n      })\n      .catch(handleError)\n  }\n\n  return (\n    <div className=\"wrapper\">\n\n      <CurrentUserContext.Provider value={currentUser}>\n{/*         <Routes>\n          <Route exact path=\"/\"> */}\n\n            <Header />\n\n            <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              cards={cards}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDeleteClick}\n            />\n\n            <Footer />\n\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              setOpenState={setIsEditProfilePopupOpen}\n            />\n\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddCard={handleAddCard}\n              setOpenState={setIsAddPlacePopupOpen}\n            />\n\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n              setOpenState={setIsEditAvatarPopupOpen}\n            />\n\n            <PopupWithForm\n              isOpen={isCardDeleteConfirmPopupOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleCardDelete}\n              title=\"Вы уверены?\"\n              name=\"accept\"\n              buttonText=\"Да\"\n              buttonWaitingText=\"Удаление...\"\n              setOpenState={setIsCardDeleteConfirmPopupOpen}\n            />\n\n            <ImagePopup\n              card={selectedCard}\n              isOpen={isImagePopupOpen}\n              onClose={closeAllPopups}\n              setOpenState={setIsImagePopupOpen}\n            />\n{/*\n          </Route>\n        </Routes> */}\n      </CurrentUserContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}